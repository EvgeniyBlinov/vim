" vim: set noet ci pi sts=0 sw=4 ts=4 :
""""""""""""""""""""""""""""""""    FILE   """"""""""""""""""""""""""""""""""""


" set background=dark		" –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –¥–ª—è —Ç–µ–º–Ω–æ–≥–æ —Ñ–æ–Ω–∞
"set background=light
set foldenable 			" –§–æ–ª–¥–∏–Ω–≥ —Å–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏–µ –∫–æ–¥–∞
set foldmethod=manual
"set foldmethod=indent
"set foldmethod=marker
"set foldmarker={,}

" –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ–æ–ª–¥–∏–Ω–≥–∞
au BufWinLeave * silent! mkview
au BufWinEnter * silent! loadview

"@TODO
"if &background=="dark"
	""colorscheme happy_hacking
	"echo "dark"
"elseif &background=="light"
	""colorscheme habiLight
	"echo "light"
"endif
if &term=="xterm"
	 set t_Co=8
	 set t_Sb=[4%dm
	 set t_Sf=[3%dm
	 colorscheme happy_hacking
elseif &term=="linux"
	 set t_Co=8
	 set t_Sb=[4%dm
	 set t_Sf=[3%dm
	 colorscheme happy_hacking
else
	set t_Co=256
	colorscheme habiLight
endif

" Term
if &term =~ "xterm"
	set t_Co=256			" set 256 colors
" 	colorscheme vitamins
	" –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–æ–≤
	autocmd VimEnter,Colorscheme * :hi SpecialKey ctermfg=8
endif

" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif

" Syntax highlighting enables.
"if has("syntax")
""syntax on
"endif


" old regex engine for fast filetype parsing
set re=1


filetype on
filetype plugin indent on " –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–¥–∞ —Ñ–∞–π–ª–∞
augroup filetype
	autocmd BufNewFile,BufRead <Directory Path>/*.html set filetype=php
	autocmd BufRead,BufNewFile *.vue set filetype=html
augroup END

set ignorecase				" –ò–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
set incsearch               " –ü–µ—Ä–µ—Å–∫–∞–∫–∏–≤–∞—Ç—å –Ω–∞ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞


" –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –¥–∏–∞–ª–æ–≥–æ–≤
if has('unix')
    language messages C
else
    language messages en
endif
" –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ!
"let $LANG = 'en'
"set langmenu=en_US.UTF-8

" –Ø–∑—ã–∫–æ–≤—ã–µ —É—Å—Ç–∞–Ω–æ–≤" –Ø–∑—ã–∫–æ–≤—ã–µ
set keymap=russian-jcukenwin
"set langmap=–§–ò–°–í–£–ê–ü–†–®–û–õ–î–¨–¢–©–ó–ô–ö–´–ï–ì–ú–¶–ß–ù–Ø;ABCDEFGHIJKLMNOPQRSTUVWXYZ,—Ñ–∏—Å–≤—É–∞–ø—Ä—à–æ–ª–¥—å—Ç—â–∑–π–∫—ã–µ–≥–º—Ü—á–Ω—è;abcdefghijklmnopqrstuvwxyz
set langmap=–πq,—Üw,—Ée,–∫r,–µt,–Ωy,–≥u,—ài,—âo,–∑p,—Ö[,—ä],—Ña,—ãs,–≤d,–∞f,–øg,—Äh,–æj,–ªk,–¥l,–∂\\;,—ç',—èz,—áx,—Åc,–ºv,–∏b,—Çn,—åm,–±\\,,—é.,—ë`,–ôQ,–¶W,–£E,–öR,–ïT,–ùY,–ìU,–®I,–©O,–óP,–•{,–™},–§A,–´S,–íD,–êF,–üG,–†H,–ûJ,–õK,–îL,–ñ:,–≠\\",–ØZ,–ßX,–°C,–úV,–òB,–¢N,–¨M,–ë<,–Æ>,–Å~

" –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ª–∞—Ç–∏–Ω—Å–∫–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞
set iminsert=0
" –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ª–∞—Ç–∏–Ω—Å–∫–∞—è —Ä–∞—Å–∫–ª–∞–¥–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
set imsearch=0
" –†–∞–±–æ—Ç–∞ —Å —Ä—É—Å—Å–∫–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ (—á—Ç–æ–±—ã w, b, * –ø–æ–Ω–∏–º–∞–ª–∏ —Ä—É—Å—Å–∫–∏–µ —Å–ª–æ–≤–∞)
set iskeyword=@,48-57,_,192-255
" –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ä—Ñ–æ–≥—Ä–∞—Ñ–∏–∏
set spelllang=ru_yo,en_us
" –ø–æ–º–æ—â—å –Ω–∞ —Ä—É—Å—Å–∫–æ–º
" set helplang=ru

" –í—Å–µ–≥–¥–∞ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å –∫–æ–º–∞–Ω–¥–Ω—É—é —Å—Ç—Ä–æ–∫—É
set laststatus=2

set splitright

" –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω—è–µ–º–æ–π –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –∫–æ–º–∞–Ω–¥—ã –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞.
" –ö –ø—Ä–∏–º–µ—Ä—É, –µ—Å–ª–∏ –≤—ã –Ω–∞–±–µ—Ä–µ—Ç–µ 2d, —Ç–æ –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É —ç–∫—Ä–∞–Ω–∞ Vim –æ—Ç–æ–±—Ä–∞–∑–∏—Ç —Å—Ç—Ä–æ–∫—É 2d.
set showcmd
" –í–∫–ª—é—á–∞–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
set statusline=%<%f%h%m%r%=format=%{&fileformat}\ file=%{&fileencoding}\ enc=%{&encoding}\ %b\ 0x%B\ %l,%c%V\ %P

" ======= –ú–´–®–¨========
" –ò–∑–º–µ–Ω–∏—Ç—å —Ü–≤–µ—Ç –∫—É—Ä—Å–æ—Ä–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–µ–∂–∏–º–∞ –≤–≤–æ–¥–∞

" –í–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –º—ã—à–∏
set mouse+=a
"if &term =~ '^screen'
    "" tmux knows the extended mouse mode
    "set ttymouse=xterm2
"endif
if !has('nvim')
	if has("mouse_sgr")
		set ttymouse=sgr
	else
		set ttymouse=xterm2
	end
end
set mousemodel=popup

" –ü—Ä—è—Ç–∞—Ç—å –∫—É—Ä—Å–æ—Ä –ø—Ä–∏ –Ω–∞–±–æ—Ä–µ —Ç–µ–∫—Å—Ç–∞
set mousehide

" –†–∞–∑—Ä–µ—à–∏—Ç—å –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –≤—ã–¥–µ–ª–µ–Ω–∏–µ –º—ã—à—å—é
"set mouse=nvir
" ======= –ú–´–®–¨=======


" tabs
"set noet ci pi sts=0 sw=4 ts=4
""""""""""" equal
"set noexpandtab
"set copyindent
"set preserveindent
"set softtabstop=0
"set shiftwidth=4
"set tabstop=4

" –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–∞–±—É–ª—è—Ü–∏–∏ —Ç–∞–±—É–ª—è—Ü–∏—è —Ä–∞–≤–Ω–∞ 4 –ø—Ä–æ–±–µ–ª–∞–º
"set tabstop=4
" –î–≤–∏–≥–∞—Ç—å –±–ª–æ–∫–∏ –≤ –≤–∏–∑—É–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ –Ω–∞ 4 –ø—Ä–æ–±–µ–ª–∞ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞–≤–∏—à < –∏ >
"set shiftwidth=4
"set softtabstop=4
set smarttab
set shiftround
" set noexpandtab | retab! "–∫–æ–Ω–≤–µ—Ä—Ç –ø—Ä–æ–±–µ–ª–æ–≤ –≤ —Ç–∞–±—ã
set expandtab
set softtabstop=4
set shiftwidth=4
set tabstop=4
" –ê–≤—Ç–æ–æ—Ç—Å—Ç—É–ø—ã –¥–ª—è –Ω–æ–≤—ã—Ö —Å—Ç—Ä–æ–∫
set autoindent
set nosmartindent

" –ó–∞—Å—Ç–∞–≤–ª—è–µ–º BackSpace —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ x, —Ç.–µ. —É–¥–∞–ª—è—Ç—å –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Å–∏–º–≤–æ–ª
set backspace=indent,eol,start whichwrap+=<,>,[,]

function! MyKeyMapHighlight()
   if &iminsert == 0 " –ø—Ä–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–π —Ä–∞—Å–∫–ª–∞–¥–∫–µ —Å—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –æ–∫–Ω–∞ –±—É–¥–µ—Ç —Å–µ—Ä–æ–≥–æ —Ü–≤–µ—Ç–∞
      hi StatusLine ctermfg=White guifg=White
   else " –∞ –ø—Ä–∏ —Ä—É—Å—Å–∫–æ–π - –∑–µ–ª–µ–Ω–æ–≥–æ.
      hi StatusLine ctermfg=DarkRed guifg=DarkRed
   endif
endfunction
call MyKeyMapHighlight() " –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ Vim —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å —Ü–≤–µ—Ç —Å—Ç–∞—Ç—É—Å–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
autocmd WinEnter * :call MyKeyMapHighlight() " –ø—Ä–∏ —Å–º–µ–Ω–µ –æ–∫–Ω–∞ –æ–±–Ω–æ–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å–∫–ª–∞–¥–∫–∞—Ö
" –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Ctrl+F –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–∞—Å–∫–ª–∞–¥–æ–∫
cmap <silent> <C-F> <C-^>
imap <silent> <C-F> <C-^>X<Esc>:call MyKeyMapHighlight()<CR>a<C-H>
nmap <silent> <C-F> a<C-^><Esc>:call MyKeyMapHighlight()<CR>
vmap <silent> <C-F> <Esc>a<C-^><Esc>:call MyKeyMapHighlight()<CR>gv


" C-e - –∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å/—Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å (–ø—Ä–∏ –ø–æ–º–æ—â–∏ NERD_Comment)
"map <C-e> ,ci
"nmap <C-e> ,ci
"imap <C-e> <ESC>,cii


" =================== HOTKEYS ================

" –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ–Ω—Ñ–∏–≥–∞ –ø–æ ,v
map <silent><leader>v :tabf ~/.vim/vimrc<cr>

" –ü—Ä–∏ –æ—Ç—Å—Ç—É–ø–∞—Ö –Ω–µ —Å–Ω–∏–º–∞—Ç—å –≤—ã–¥–µ–ª–µ–Ω–∏–µ
vnoremap < <gv
vnoremap > >gv

" –ü—Ä–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤ —Å –¥–ª–∏–Ω–Ω—ã–º–∏ —Å—Ç—Ä–æ–∫–∞–º–∏ –∫—É—Ä—Å–æ—Ä —á–∞—Å—Ç–æ ¬´—Å–∫–∞—á–µ—Ç¬ª –∏ –ø–µ—Ä–µ–¥–≤–∏–≥–∞–µ—Ç—Å—è –Ω–µ —Ç—É–¥–∞, –∫—É–¥–∞ —Ö–æ—Ç–µ–ª–æ—Å—å –±—ã.
" –°–¥–µ–ª–∞–µ–º, —á—Ç–æ–±—ã –ø–æ–≤–µ–¥–µ–Ω–∏–µ –∫—É—Ä—Å–æ—Ä–∞ –±—ã–ª–æ –ø–æ—Ö–æ–∂–µ –Ω–∞ –æ–±—ã—á–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Ä–µ–¥–∞–∫—Ç–æ—Ä—ã
nnoremap j gj
nnoremap k gk
vnoremap j gj
vnoremap k gk
nnoremap <Down> gj
nnoremap <Up> gk
vnoremap <Down> gj
vnoremap <Up> gk
inoremap <Down> <C-o>gj
inoremap <Up> <C-o>gk

"imap <leader>z <c-y><leader>
"map <leader>z <c-y><leader>
"vmap <leader>z <c-y><leader>

" –ë–æ–ª–µ–µ –ø—Ä–∏–≤—ã—á–Ω—ã–µ Page Up/Down, –∫–æ–≥–¥–∞ –∫—É—Ä—Å–æ—Ä –æ—Å—Ç–∞—ë—Ç—Å—è –≤ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ,
" –∞ –Ω–µ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—Å—è –≤–≤–µ—Ä—Ö/–≤–Ω–∏–∑ —ç–∫—Ä–∞–Ω–∞, –∫–∞–∫ –ø—Ä–∏ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º PgUp/PgDown.
" –ü–æ—Å–∫–æ–ª—å–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –ø–æ C-U/D –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –Ω–∞ –ø–æ–ª—ç–∫—Ä–∞–Ω–∞,
nmap <PAGEUP> <C-U><C-U>
nmap <PAGEDOWN> <C-D><C-D>
imap <PAGEUP> <C-O><C-U><C-O><C-U>
imap <PAGEDOWN> <C-O><C-D><C-O><C-D>
vmap <PAGEUP> <C-U><C-U>
vmap <PAGEDOWN> <C-D><C-D>

" –ü–µ—Ä–µ–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ Home http://vim.wikia.com/wiki/Smart_home
noremap <expr> <silent> <Home> col('.') == match(getline('.'),'\S')+1 ? '0' :'^'
imap <silent> <Home> <C-O><Home>

" –û—Ç–º–µ–Ω–∏—Ç—å-–≤–µ—Ä–Ω—É—Ç—å —á–µ—Ä–µ–∑ Ctrl
" –æ—Ç–º–µ–Ω–∞ –¥–µ–π—Å—Ç–≤–∏—è
map <c-z> u
imap <c-z> <C-O>u

" –≤–µ—Ä–Ω—É—Ç—å –æ—Ç–º–µ–Ω—ë–Ω–Ω–æ–µ –Ω–∞–∑–∞–¥
noremap <c-y> <C-R>
inoremap <c-y> <C-O><C-R>

" –¢–∞–∫ –∫–∞–∫ –º—ã –≤–∫–ª—é—á–∏–ª–∏ autoindent, —Ç–æ –≤—Å—Ç–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–∞ —Å –æ—Ç—Å—Ç—É–ø–∞–º–∏ (–∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞ X Window –∏–ª–∏ screen) 
" –±—É–¥–µ—Ç ¬´–≥–ª—é—á–∏—Ç—å¬ª ‚Äî –æ—Ç—Å—É–ø—ã –±—É–¥—É—Ç ¬´—Å—ä–µ–∑–∂–∞—Ç—å¬ª. –ö —Å—á–∞—Å—Ç—å—é, —ç—Ç–æ –ª–µ–≥–∫–æ –∏—Å–ø—Ä–∞–≤–∏—Ç—å ‚Äî –Ω–∞–∂–∞–≤ Ctrl+U —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –≤—Å—Ç–∞–≤–∫–∏.
inoremap <silent> <C-u> <ESC>u:set paste<CR>.:set nopaste<CR>gi

" —É–±—Ä–∞—Ç—å –ø–æ–¥—Å–≤–µ—Ç–∫—É –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
nnoremap <C-h> :noh<CR>

" ====================  TABS  ============================================
" {{{ –í–∫–ª–∞–¥–∫–∏
" –ù–æ–≤–∞—è –≤–∫–ª–∞–¥–∫–∞
nmap <silent> <leader>tn :tabnew<cr>
nmap ,t :tabnew<CR>

" –ó–∞–∫—Ä—ã—Ç—å –≤–∫–ª–∞–¥–∫—É
nmap <silent> <leader>tc :tabclose<cr>

" –ü—Ä–µ–¥—ã–¥—É—â–∞—è –≤–∫–ª–∞–¥–∫–∞
map  <C-S-left> :tabp<cr>
nmap <C-S-left> :tabp<cr>
imap <C-S-left> <esc>:tabp<cr>i

" –°–ª–µ–¥—É—é—â–∞—è –≤–∫–ª–∞–¥–∫–∞
map  <C-S-right> :tabn<cr>
nmap <C-S-right> :tabn<cr>
imap <C-S-right> <esc>:tabn<cr>i

" }}}
" –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–∞–±–æ–≤ (–≤–∫–ª–∞–¥–æ–∫) —Å –ø–æ–º–æ—â—å—é SHIFT+TAB –∏ CTRL+TAB
map  <S-TAB> :tabprevious<CR>
nmap <S-TAB> :tabprevious<CR>
imap <S-TAB> <Esc>:tabprevious<CR>i
map  <C-TAB> :tabnext<CR>
nmap <C-TAB> :tabnext<CR>
imap <C-TAB> <Esc>:tabnext<CR>i

" –û—Ç–∫—Ä—ã—Ç–∏–µ\–∑–∞–∫—Ä—ã—Ç–∏–µ –Ω–æ–≤–æ–π –≤–∫–ª–∞–¥–∫–∏ –ø–æ CTRL+T –∏ CTRL+W
" nmap <C-t> :tabnew<CR>
" imap <C-t> <Esc>:tabnew<CR>a
" nmap <C-w> :tabclose<CR>
" imap <C-w> <Esc>:tabclose<CR>

" –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –º–µ–∂–¥—É –æ–∫–Ω–∞–º–∏ –ø–æ Ctrl+–°—Ç—Ä–µ–ª–∫–∏
if has('gui_macvim')
	map  <a-down> <c-w><down>
	imap <a-down> <esc><c-w><c-down>
	map  <a-up> <c-w><up>
	imap <a-up> <esc><c-w><c-up>
	map  <a-left> <c-w><left>
	imap <a-left> <esc><c-w><c-left>
	map  <a-right> <c-w><right>
	imap <a-right> <esc><c-w><c-right>
else
	map  <c-down> <c-w><down>
	imap <c-down> <esc><c-w><c-down>
	map  <c-up> <c-w><up>
	imap <c-up> <esc><c-w><c-up>
	map  <c-left> <c-w><left>
	imap <c-left> <esc><c-w><c-left>
	map  <c-right> <c-w><right>
	imap <c-right> <esc><c-w><c-right>
endif

" –ø–µ—Ä–µ–¥–≤–∏–Ω—É—Ç—å —Ç–µ–∫—É—â—É—é –≤–∫–ª–∞–¥–∫—É –≤–ø—Ä–∞–≤–æ
nnoremap tm :tabm +10<CR>

" –ø–µ—Ä–µ–¥–≤–∏–Ω—É—Ç—å —Ç–µ–∫—É—â—É—é –≤–∫–ª–∞–¥–∫—É –≤–ª–µ–≤–æ
nnoremap tM :tabm -10<CR>

" —É–≤–µ–ª–∏—á–∏—Ç—å –æ–∫–Ω–æ
nnoremap wm :vertical resize +80% <CR>:resize +80% <CR>
" —É–º–µ–Ω—å—à–∏—Ç—å –æ–∫–Ω–æ
nnoremap wM :vertical resize -80% <CR>:resize -80% <CR>

" window zoom | restore c-w-=
nnoremap wz <c-w>\|<c-w>_
" ====================  TABS  ============================================

" –ê–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ª–æ–≤–∞
inoremap <expr> <C-Space> pumvisible() \|\| &omnifunc == '' ?
\ "\<lt>C-n>" :
\ "\<lt>C-x>\<lt>C-o><c-r>=pumvisible() ?" .
\ "\"\\<lt>c-n>\\<lt>c-p>\\<lt>c-n>\" :" .
\ "\" \\<lt>bs>\\<lt>C-n>\"\<CR>"
imap <C-@> <C-Space>


" –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è {{{
" A–≤—Ç–æ–∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å–ª–æ–≤ –ø–æ tab =)
"function InsertTabWrapper()
 "let col = col('.') - 1
  "if !col || getline('.')[col - 1] !~ '\k'
    "return "\<tab>"
  "else
    "return "\<c-p>"
  "endif
"endfunction
"imap <c-a> <c-r>=InsertTabWrapper()<cr>
" }}}

" Yii {{{
	" –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º (—á—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–∂–º–∏—Ç–µ <Sk> –Ω–∞ –ª—é–±–æ–µ –∫–ª—é—á–µ–≤–æ–µ
	" —Å–ª–æ–≤–æ)
    " @TODO
	" autocmd BufNewFile,Bufread *.php set keywordprg="help"
" 

"http://www.instanceof.ru/linux/vim/translate
"map <F8>  :call TRANSLATE()<cr>
"function TRANSLATE()
"   let  a=getline('.')
"   let co=col('.')-1
"   let starts=strridx(a," ",co)
"   let ends = stridx(a," ",co)
"   if ends==-1
"	   let ends=strlen(a)
"   endif
"   let res = strpart(a,starts+1,ends-starts)
"   let cmds = "sdcv -n " . res
"   let out = system(cmds)
"   echo out
"endfunction

if &term =~ "xterm" || &term =~ "xterm-256color" 
	let &t_SI = "\<Esc>]12;red\x7"
	let &t_EI = "\<Esc>]12;blue\x7"
endif

" –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ –æ—Ç—Å—Ç—É–ø–æ–≤
"let g:indent_guides_enable_on_vim_startup = 0
"let g:indent_guides_auto_colors = 0
"let g:indent_guides_color_change_percent = 5
"let g:indent_guides_guide_size = 1

"autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd	guibg=grey18 ctermbg=4
"autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=grey18 ctermbg=4

""""""""""""""""""""""""""""""""""""""""""""""""""""
"" –±–ª–æ–∫ –º–µ–Ω—é
"set wildmenu
"set wcm=<Tab>
"
"	" –ú–µ–Ω—é Encoding -->
"		" –í—ã–±–æ—Ä –∫–æ–¥–∏—Ä–æ–≤–∫–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª -->
"			set wildmenu
"			set wcm=<Tab>
"			menu Encoding.Read.utf-8<Tab><F7> :e ++enc=utf8 <CR>
"			menu Encoding.Read.windows-1251<Tab><F7> :e ++enc=cp1251<CR>
"			menu Encoding.Read.koi8-r<Tab><F7> :e ++enc=koi8-r<CR>
"			menu Encoding.Read.cp866<Tab><F7> :e ++enc=cp866<CR>
"			map <F9> :emenu Encoding.Read.<TAB>
"		" –í—ã–±–æ—Ä –∫–æ–¥–∏—Ä–æ–≤–∫–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª <--
"
"		" –í—ã–±–æ—Ä –∫–æ–¥–∏—Ä–æ–≤–∫–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–∞–π–ª -->
"			set wildmenu
"			set wcm=<Tab>
"			menu Encoding.Write.utf-8<Tab><S-F7> :set fenc=utf8 <CR>
"			menu Encoding.Write.windows-1251<Tab><S-F7> :set fenc=cp1251<CR>
"			menu Encoding.Write.koi8-r<Tab><S-F7> :set fenc=koi8-r<CR>
"			menu Encoding.Write.cp866<Tab><S-F7> :set fenc=cp866<CR>
"			map <S-F9> :emenu Encoding.Write.<TAB>
"		" –í—ã–±–æ—Ä –∫–æ–¥–∏—Ä–æ–≤–∫–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —Ñ–∞–π–ª <--
"
"		" –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–Ω—Ü–æ–≤ —Å—Ç—Ä–æ–∫ (dos - <CR><NL>, unix - <NL>, mac - <CR>) -->
"			set wildmenu
"			set wcm=<Tab>
"			menu Encoding.End_line_format.unix<Tab><C-F7> :set fileformat=unix<CR>
"			menu Encoding.End_line_format.dos<Tab><C-F7> :set fileformat=dos<CR>
"			menu Encoding.End_line_format.mac<Tab><C-F7> :set fileformat=mac<CR>
"			map <C-F9> :emenu Encoding.End_line_format.<TAB>
"		" –í—ã–±–æ—Ä —Ñ–æ—Ä–º–∞—Ç–∞ –∫–æ–Ω—Ü–æ–≤ —Å—Ç—Ä–æ–∫ (dos - <CR><NL>, unix - <NL>, mac - <CR>) <--
"	" –ú–µ–Ω—é Encoding <--
"
"	" –í–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–∞–∑–±–∏–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ
"	" —Å—Ç—Ä–æ–∫ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –¥–ª–∏–Ω—ã
"		menu Textwidth.off :set textwidth=0<CR>
"		menu Textwidth.on :set textwidth=178<CR>
"
""map <F12> :emenu Encoding.<Tab>
"" –±–ª–æ–∫ –º–µ–Ω—é
"
""""""""""""""""""""""""""""""""""""""""""""""""""""
"-------------------------
" ctags
"-------------------------
"map <C-\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>
map <C-\> :vsp <CR>:exec("tjump ".expand("<cword>"))<CR>
""""""""""""""""""""""""""""""""""""""""""""""""""""
"-------------------------
" PHP –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
"-------------------------
runtime! config/php/**
runtime! config/go/**
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"============CSS block================
" –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ css —Å–≤–æ–π—Å—Ç–≤
noremap <silent><leader>ss <esc>vi{:!sort<cr>:echo "–°–≤–æ–π—Å—Ç–≤–∞ css –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã!"<cr>
" –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ css
noremap <silent><leader>ct <esc>:%!/usr/share/vim/cssformatter.py<cr>:echo "–°–≤–æ–π—Å—Ç–≤–∞ css –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã!"<cr>

" Emmet
let g:user_emmet_leader_key='<C-e>'

" Zencoding 
imap <leader>z <c-y><leader>
map <leader>z <c-y><leader>
vmap <leader>z <c-y><leader>
"============END CSS block================
""""""""""""""""""""""""""""""   NERDTree
let NERDTreeIgnore=['\.pyc$']
let NERDTreeShowHidden=1
"let NERDTreeChDirMode=2
"let NERDTreeDirArrows=1
map  <F3> :NERDTreeFind<CR>

"if has("gui_running")
	"set cursorline							" –ü–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É –≤ GUI —Ä–µ–∂–∏–º–µ
	"au VimEnter * NERDTree /home/www/		" –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ NERDTree
	"let NERDTreeHighlightCursorline=1		" –ü–æ–¥—Å–≤–µ—Ç–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–¥ –∫—É—Ä—Å–æ—Ä–æ–º
"else
	"set nocursorline						" –ù–µ –ø–æ–¥—Å–≤–µ—á–∏–≤–∞—Ç—å —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É –≤ –∫–æ–Ω—Å–æ–ª–∏
	"let NERDTreeHighlightCursorline=0		" –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–¥—Å–≤–µ—Ç–∫–∏ —Ñ–∞–π–ª–∞ –ø–æ–¥ –∫—É—Ä—Å–æ—Ä–æ–º
"endif

nnoremap <silent> <C-f> :<C-u>if exists("t:NERDTreeBufName") && bufwinnr(t:NERDTreeBufName) == winnr() <Bar> wincmd p <Bar> endif <Bar> FufTag<CR>
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ==================   dragvisulas.vim ==========================
vmap  <expr>  <S-LEFT>   DVB_Drag('left')
vmap  <expr>  <S-RIGHT>  DVB_Drag('right')
vmap  <expr>  <S-DOWN>   DVB_Drag('down')
vmap  <expr>  <S-UP>     DVB_Drag('up')
" ==================   dragvisulas.vim ==========================

map  <C-c> :call system('xclip -selection c -i', @")<CR>
vmap <C-c> :call system('xclip -selection c -i', @")<CR>
imap <C-c> :call system('xclip -selection c -i', @")<CR>

" –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–µ –∏–º—è —Ñ–∞–π–ª–∞ –∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏
map  <C-l> :call system('xclip -selection c -i', expand("%:p") . ':' . line('.'))<CR>
vmap <C-l> :call system('xclip -selection c -i', expand("%:p") . ':' . line('.'))<CR>
imap <C-l> :call system('xclip -selection c -i', expand("%:p") . ':' . line('.'))<CR>
" –°—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç
"map  <C-l> :call system('xclip -selection c -i', expand("%:p") . ' +' . line('.'))
"vmap <C-l> :call system('xclip -selection c -i', expand("%:p") . ' +' . line('.'))
"imap <C-l> :call system('xclip -selection c -i', expand("%:p") . ' +' . line('.'))

" Mapping xclip clipboard support
 if has("unix")
   let s:uname = system("uname -s")
   if s:uname =~ "Darwin"
     " On OSX
     vmap <C-c> y:call system("pbcopy", getreg("\""))<CR>
     "nmap <C-v> :call setreg("\"",system("pbpaste"))<CR>
   endif
   if s:uname =~ "Linux"
     " On Linux
     " Without X server it will just use a temporal file
     "if system("echo $DISPLAY") =~ ""
       "vmap <C-c> y: call system("> /tmp/theClipboardWithoutX", getreg("\""))<CR>
       ""map <C-v> :call setreg("\"", system("< /tmp/theClipboardWithoutX"))<CR>p
     "else
      " !!! –¢–æ–ª—å–∫–æ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
       vmap <C-c> y: call system("xclip -i -selection primary", getreg("\""))<CR>
       "vmap <C-p> y: call system("dpaste", getreg("\""))<CR>
       "map <C-v> :call setreg("\"",system("xclip -o -selection clipboard"))<CR>p
     "endif
   endif
 endif
":set clipboard=unnamed,exclude:cons\\\|linux

" ex command for toggling hex mode - define mapping if desired
command -bar Hexmode call ToggleHex()

" helper function to toggle hex mode
function ToggleHex()
  " hex mode should be considered a read-only operation
  " save values for modified and read-only for restoration later,
  " and clear the read-only flag for now
  let l:modified=&mod
  let l:oldreadonly=&readonly
  let &readonly=0
  let l:oldmodifiable=&modifiable
  let &modifiable=1
  if !exists("b:editHex") || !b:editHex
    " save old options
    let b:oldft=&ft
    let b:oldbin=&bin
    " set new options
    setlocal binary " make sure it overrides any textwidth, etc.
    silent :e " this will reload the file without trickeries 
              "(DOS line endings will be shown entirely )
    let &ft="xxd"
    " set status
    let b:editHex=1
    " switch to hex editor
    %!xxd
  else
    " restore old options
    let &ft=b:oldft
    if !b:oldbin
      setlocal nobinary
    endif
    " set status
    let b:editHex=0
    " return to normal editing
    %!xxd -r
  endif
  " restore values for modified and read only state
  let &mod=l:modified
  let &readonly=l:oldreadonly
  let &modifiable=l:oldmodifiable
endfunction

" Change selected text from NameLikeThis to name_like_this.
"vnoremap ,u :%s#\C\(\<\u[a-z0-9]\+\|[a-z0-9]\+\)\(\u\)#\l\1_\l\2#gul

" Change selected text from name_like_this to NameLikeThis.
"vnoremap ,U :s/_\([a-z]\)/\u\1/g<CR>gUl

" –í—ã—Ä–µ–∑–∞—Ç—å-–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å-–≤—Å—Ç–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ Ctrl
" CTRL-V –≤—Å—Ç–∞–≤–∏—Ç—å –ø–æ–¥ –∫—É—Ä—Å–æ—Ä–æ–º
" map <C-V> +gP

" CTRL-X - –≤—ã—Ä–µ–∑–∞—Ç—å
" vnoremap <C-X> +x

" CTRL-C - –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
" vnoremap <C-C> +y

" ========================================
"" –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª –ø–æ <F2>
"nmap <F2> :w!<CR>
"imap <F2> <Esc>:w!<CR>
"vmap <F2> <Esc>:w!<CR>
"" –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–¥–∞–∫—Ç–æ—Ä–∞ –ø–æ <F10>
"nmap <F10> :q<CR>
"imap <F10> <Esc>:q<CR>
"vmap <F10> <Esc>:q<CR>

"" –ü—Ä–æ—Å–º–æ—Ç—Ä —Å–ø–∏—Å–∫–∞ –±—É—Ñ–µ—Ä–æ–≤ –ø–æ <F4>
nnoremap gb :ls<CR>:b<Space>
"nmap <F4> <Esc>:buffers<CR>
"vmap <F4> <Esc>:buffers<CR>
"imap <F4> <Esc><Esc>:buffers<CR>
"" –ø—Ä–µ–¥—ã–¥—É—â–∏–π –±—É—Ñ–µ—Ä
"map <F5> :bp<CR>
"vmap <F5> <Esc>:bp<CR>i
"imap <F5> <Esc>:bp<CR>i
"" —Å–ª–µ–¥—É—é—â–∏–π –±—É—Ñ–µ—Ä
"map <F6> :bn<CR>
"vmap <F6> <Esc>:bn<CR>i
"imap <F6> <Esc>:bn<CR>i

"" –ü–µ—Ä–µ–π—Ç–∏ –≤ —Ñ–∞–π–ª –ø–æ–¥ –∫—É—Ä—Å–æ—Ä–æ–º
nnoremap <F8> :vertical wincmd F<CR>
nnoremap <C-x> :vertical wincmd F<CR>
nnoremap <F9> :vnew


"set noautochdir

" ===========  ultisnips  =================
if exists('g:Ulti')
	let g:UltiSnipsExpandTrigger="<c-n>"
	let g:UltiSnipsJumpForwardTrigger="<c-b>"
	let g:UltiSnipsJumpBackwardTrigger="<c-z>"
endif
" ===========  supertab  =================
"let g:SuperTabNoCompleteAfter = ['^', '\s']
"let g:SuperTabCrMapping = 0
